<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.ashim</groupId>
	<artifactId>spring-rest-security</artifactId>
	<packaging>war</packaging>
	<version>1.0.0</version>

	<name>spring-rest-security</name>

	<repositories>
		<repository>
			<id>spring-milestone</id>
			<name>Spring Portfolio Milestone Repository</name>
			<url>http://repo.springsource.org/milestone/</url>
		</repository>
	</repositories>

	<profiles>
		<profile>
			<id>develop</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<project.name>${project.artifactId}</project.name>

				<db.driverClass>com.mysql.jdbc.Driver</db.driverClass>
				<db.connectionURL>jdbc:mysql://localhost:3306/spring_rest?useSSL=false</db.connectionURL>
				<db.username>root</db.username>
				<db.password>root</db.password>

				<liquibase.changeLog>master.xml</liquibase.changeLog>

				<hibernate.dialect>org.hibernate.dialect.MySQLDialect</hibernate.dialect>
				<hibernate.show_sql>true</hibernate.show_sql>
				<hibernate.format_sql>true</hibernate.format_sql>

				<skip.unit.tests>true</skip.unit.tests>
				<skip.integration.tests>true</skip.integration.tests>
			</properties>
		</profile>
		<profile>
			<id>unit-test</id>
			<properties>
				<project.name>${project.artifactId}</project.name>

				<skip.unit.tests>false</skip.unit.tests>
				<skip.integration.tests>true</skip.integration.tests>
			</properties>
		</profile>
		<profile>
			<id>integration-test</id>
			<properties>
				<project.name>${project.artifactId}</project.name>

				<db.driverClass>com.mysql.jdbc.Driver</db.driverClass>
				<db.connectionURL>jdbc:mysql://localhost:3306/test_spring_rest?useSSL=false</db.connectionURL>
				<db.username>root</db.username>
				<db.password>root</db.password>

				<liquibase.changeLog>test-master.xml</liquibase.changeLog>

				<hibernate.dialect>org.hibernate.dialect.MySQLDialect</hibernate.dialect>
				<hibernate.show_sql>true</hibernate.show_sql>
				<hibernate.format_sql>true</hibernate.format_sql>

				<skip.unit.tests>true</skip.unit.tests>
				<skip.integration.tests>false</skip.integration.tests>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>spring-rest-security</finalName>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<warSourceDirectory>src/main/webapp</warSourceDirectory>
					<warName>${project.artifactId}</warName>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.10</version>
				<executions>
					<!-- Add a new source directory to our build -->
					<execution>
						<id>add-integration-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<!-- Configures the source directory of our integration tests -->
							<sources>
								<source>src/integration-test/java</source>
							</sources>
						</configuration>
					</execution>
					<!-- Add a new resource directory to our build -->
					<execution>
						<id>add-integration-test-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<!-- Configures the resource directory of our integration tests -->
							<resources>
								<!-- Placeholders that are found from the files located in the configured 
									resource directories are replaced with the property values found from the 
									profile specific configuration file. -->
								<resource>
									<filtering>true</filtering>
									<directory>src/integration-test/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Used for unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Used for integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<systemPropertiesFile>${project.basedir}/${project.artifactId}/src/test/resources/system.properties</systemPropertiesFile>
				</configuration>
				<executions>
					<!-- States that both integration-test and verify goals of the Failsafe 
						Maven plugin are executed. -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Skips integration tests if the value of skip.integration.tests 
								property is true -->
							<skipTests>${skip.integration.tests}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Used for liquibase migration -->
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>3.4.1</version>
				<configuration>
					<changeLogFile>src/main/resources/db/migration/master.xml</changeLogFile>
					<diffChangeLogFile>src/main/resources/db/migration/diff-changelog.xml</diffChangeLogFile>
					<outputChangeLogFile>src/main/resources/db/migration/output-changelog.xml</outputChangeLogFile>

					<driver>${db.driverClass}</driver>
					<url>${db.connectionURL}</url>
					<username>${db.username}</username>
					<password>${db.password}</password>

					<referenceUrl>hibernate:spring:com.github.ashim.persistence.entity?dialect=${hibernate.dialect}</referenceUrl>
					<verbose>true</verbose>
					<logging>debug</logging>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.liquibase.ext</groupId>
						<artifactId>liquibase-hibernate4</artifactId>
						<version>3.5</version>
					</dependency>
					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>spring-beans</artifactId>
						<version>4.1.7.RELEASE</version>
					</dependency>
					<dependency>
						<groupId>org.springframework.data</groupId>
						<artifactId>spring-data-jpa</artifactId>
						<version>1.7.3.RELEASE</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>

	</build>

	<dependencies>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>

		<!-- Spring REST -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-webmvc</artifactId>
			<version>${spring.data.rest.webmvc}</version>
			<exclusions>
				<exclusion>
					<artifactId>jackson-annotations</artifactId>
					<groupId>com.fasterxml.jackson.core</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jackson-databind</artifactId>
					<groupId>com.fasterxml.jackson.core</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring JPA -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring-data-jpa.version}</version>
		</dependency>

		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>2.2.4</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>javax.el</artifactId>
			<version>2.2.4</version>
		</dependency>

		<!-- jsr303 validation -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>

		<!-- Hibernate validators -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.2.4.Final</version>
		</dependency>

		<!-- MySQL -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.connector.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- marshalling -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.7.4</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.7</version>
		</dependency>

		<!-- needed to bridge to slf4j for projects that use the log4j APIs directly -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- Changelog for Db Schema -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>3.4.1</version>
		</dependency>

		<!-- the core package provides just logging through SysErr, we need this 
			logger implementation -->
		<dependency>
			<groupId>com.mattbertolini</groupId>
			<artifactId>liquibase-slf4j</artifactId>
			<version>1.0.0</version>
		</dependency>

		<!-- Util -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<!-- Apache Commons -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>

		<!-- Test Tool -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${springframework.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<version>4.1.0.RELEASE</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.5.2</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.github.springtestdbunit</groupId>
			<artifactId>spring-test-dbunit</artifactId>
			<version>1.3.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-test-mvc</artifactId> 
			<version>1.0.0.M2</version> <scope>test</scope> <exclusions> <exclusion> 
			<artifactId>spring-context</artifactId> <groupId>org.springframework</groupId> 
			</exclusion> <exclusion> <artifactId>spring-webmvc</artifactId> <groupId>org.springframework</groupId> 
			</exclusion> <exclusion> <artifactId>spring-test</artifactId> <groupId>org.springframework</groupId> 
			</exclusion> <exclusion> <artifactId>hamcrest-all</artifactId> <groupId>org.hamcrest</groupId> 
			</exclusion> </exclusions> </dependency> <dependency> <groupId>org.assertj</groupId> 
			<artifactId>assertj-core</artifactId> <version>3.4.1</version> <scope>test</scope> 
			</dependency> <dependency> <groupId>org.powermock</groupId> <artifactId>powermock-core</artifactId> 
			<version>1.6.5</version> <scope>test</scope> </dependency> <dependency> <groupId>org.powermock</groupId> 
			<artifactId>powermock-module-junit4</artifactId> <version>1.6.5</version> 
			<scope>test</scope> <exclusions> <exclusion> <groupId>junit</groupId> <artifactId>junit</artifactId> 
			</exclusion> <exclusion> <groupId>org.objenesis</groupId> <artifactId>objenesis</artifactId> 
			</exclusion> </exclusions> </dependency> <dependency> <groupId>org.powermock</groupId> 
			<artifactId>powermock-api-mockito</artifactId> <version>1.6.5</version> <scope>test</scope> 
			</dependency> -->

	</dependencies>

	<properties>
		<springframework.version>4.2.6.RELEASE</springframework.version>
		<springsecurity.version>4.1.0.RELEASE</springsecurity.version>
		<spring.data.rest.webmvc>2.5.1.RELEASE</spring.data.rest.webmvc>
		<spring-data-jpa.version>1.10.1.RELEASE</spring-data-jpa.version>

		<hibernate.version>5.1.0.Final</hibernate.version>
		<mysql.connector.version>5.1.31</mysql.connector.version>

		<slf4j.version>1.7.21</slf4j.version>
		<logback.version>1.2.17</logback.version>

		<guava.version>19.0</guava.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

</project>